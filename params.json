{
  "name": "Bruk av hangfire",
  "tagline": "",
  "body": "# Hangfire\r\n* Enkelt verktøy for bakgrunnsjobber\r\n* Laget for asp.net, men støtter også services og desktopapplikasjoner\r\n* Veldig enkelt å installere i et nytt webprosjekt\r\n* Tilgjengelig som en nuget-pakke\r\n* Les mer på http://hangfire.io\r\n\r\n## Funksjoner\r\n* **Bakgrunnsjobber** som kjører øyeblikkelig\r\n* **Bakgrunnsjobber** som kjører ved et gitt tidspunkt / om en gitt tid\r\n* **Gjentagende** bakgrunnsjobber som kjører med et gitt intervall\r\n* **Fortsettelser** som lar en bakgrunnsjobb kjøre når en annen er ferdig\r\n* Jobber lagres i **minne** eller en **database**. Bruker vi en database så vil jobbene huskes selv om serveren restartes\r\n\r\n## Vi bruker den allerede\r\n* Nonline \r\n* MRS (ikke i prod enda)\r\n\r\n## Kodeeksempler\r\n### Jobb som starter med det samme\r\n    BackgroundJob.Enqueue(() => Console.WriteLine(\"Engangsjobb\");\r\n### Jobb som kjører i morgen\r\n    BackgroundJob.Schedule(() => Console.WriteLine(\"Kjører i morgen\"), TimeSpan.FromDays(1) );\r\n### Jobb som kjører en gang i timen\r\n    RecurringJob.AddOrUpdate(() => Console.WriteLine(\"En gang i timen\"), Cron.Hourly);\r\n### To jobber som kjører i sekvens\r\n    var jobId = BackgroundJob.Enqueue(() => Console.WriteLine(\"Først demme\");\r\n    BackgroundJob.ContinueWith(jobId, () => Console.WriteLine(\"Og deretter denne\"));\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}